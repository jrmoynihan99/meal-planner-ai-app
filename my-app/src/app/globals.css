@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* Hide ugly scrollbar */
textarea::-webkit-scrollbar {
  width: 0px;
  background: transparent;
}

textarea {
  scrollbar-width: none; /* Firefox */
}

html,
body {
  height: 100%;
  overscroll-behavior: contain;
}

@keyframes tilt {
  0%,
  50%,
  100% {
    transform: rotate(0deg);
  }
  25% {
    transform: rotate(0.5deg);
  }
  75% {
    transform: rotate(-0.5deg);
  }
}

.animate-tilt {
  animation: tilt 10s infinite linear;
}

.hide-scrollbar::-webkit-scrollbar {
  display: none;
}
.hide-scrollbar {
  -ms-overflow-style: none;
  scrollbar-width: none;
}

@keyframes shimmer {
  0% {
    background-position: -200% center;
  }
  100% {
    background-position: 200% center;
  }
}

.animate-gradient {
  background-size: 400% 100%;
  animation: shimmer 4s linear infinite;
}

.glow-gradient {
  background-image: linear-gradient(
    to right,
    #60a5fa,
    /* blue-400 */ #ec4899,
    /* pink-500 */ #a855f7,
    /* purple-500 */ #60a5fa /* blue-400 again for looping */
  );
  background-size: 400% 100%;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  animation: shimmer 4s linear infinite;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(0.2em);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Custom scrollbar */
::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}

::-webkit-scrollbar-thumb {
  background: #555;
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: #888;
}

::-webkit-scrollbar-track {
  background: transparent;
}

/* Firefox scrollbar */
* {
  scrollbar-width: thin;
  scrollbar-color: #555 transparent;
}

/* Tailwind-compatible glow outline effect */
.glow-outline::before {
  content: "";
  position: absolute;
  inset: -2px;
  border-radius: 9999px;
  background: linear-gradient(to right, #44bcff, #ff44ec, #ff675e);
  filter: blur(6px);
  opacity: 0.6;
  transition: opacity 0.3s;
  pointer-events: none;
}

@property --gradient-angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

@keyframes spin-gradient {
  0% {
    --gradient-angle: 0deg;
  }
  100% {
    --gradient-angle: 360deg;
  }
}

.glow-static {
  pointer-events: none;
  position: absolute;
  inset: -2px;
  border-radius: 1.5rem;
  background: conic-gradient(
    from 0deg at 50% 50%,
    #44bcff,
    #ff44ec,
    #ff675e,
    #44bcff
  );
  filter: blur(12px);
  opacity: 0.5;
}

.glow-focus {
  pointer-events: none;
  position: absolute;
  inset: -2px;
  border-radius: 1.5rem;
  opacity: 0;
  transition: opacity 0.3s ease;
  overflow: hidden;
}

.glow-focus::before,
.glow-focus::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  background: conic-gradient(
    from var(--gradient-angle) at 50% 50%,
    #44bcff 0%,
    #44bcff 10%,
    #ff44ec 40%,
    #ff675e 70%,
    #44bcff 100%
  );
  animation: spin-gradient 6s linear infinite;
}

.glow-focus::before {
  filter: blur(24px);
  opacity: 0.4;
}

.glow-focus::after {
  filter: blur(6px);
  opacity: 0.8;
}

.group:focus-within .glow-focus {
  opacity: 1;
}

@keyframes loadingBar {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.animate-loadingBar {
  animation: loadingBar 1.5s infinite linear;
}

@keyframes textCycle {
  0% {
    opacity: 0;
    transform: translateY(10px);
  }
  20% {
    opacity: 1;
    transform: translateY(0px);
  }
  80% {
    opacity: 1;
    transform: translateY(0px);
  }
  100% {
    opacity: 0;
    transform: translateY(20px);
  }
}

.animate-textCycle {
  animation: textCycle 3s ease-in-out forwards;
}
